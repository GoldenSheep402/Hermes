// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: torrent/v1/torrent.proto

package torrentV1

import (
	v1 "github.com/GoldenSheep402/Hermes/pkg/proto/go/category/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Torrent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Torrent) Reset() {
	*x = Torrent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_v1_torrent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Torrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Torrent) ProtoMessage() {}

func (x *Torrent) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_v1_torrent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Torrent.ProtoReflect.Descriptor instead.
func (*Torrent) Descriptor() ([]byte, []int) {
	return file_torrent_v1_torrent_proto_rawDescGZIP(), []int{0}
}

func (x *Torrent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetTorrentV1
type GetTorrentV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTorrentV1Request) Reset() {
	*x = GetTorrentV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_v1_torrent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentV1Request) ProtoMessage() {}

func (x *GetTorrentV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_v1_torrent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentV1Request.ProtoReflect.Descriptor instead.
func (*GetTorrentV1Request) Descriptor() ([]byte, []int) {
	return file_torrent_v1_torrent_proto_rawDescGZIP(), []int{1}
}

func (x *GetTorrentV1Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTorrentV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *v1.Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Torrent  *Torrent     `protobuf:"bytes,2,opt,name=torrent,proto3" json:"torrent,omitempty"`
}

func (x *GetTorrentV1Response) Reset() {
	*x = GetTorrentV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_v1_torrent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentV1Response) ProtoMessage() {}

func (x *GetTorrentV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_v1_torrent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentV1Response.ProtoReflect.Descriptor instead.
func (*GetTorrentV1Response) Descriptor() ([]byte, []int) {
	return file_torrent_v1_torrent_proto_rawDescGZIP(), []int{2}
}

func (x *GetTorrentV1Response) GetCategory() *v1.Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *GetTorrentV1Response) GetTorrent() *Torrent {
	if x != nil {
		return x.Torrent
	}
	return nil
}

// CreateTorrentV1
type CreateTorrentV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *v1.Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Torrent  *Torrent     `protobuf:"bytes,2,opt,name=torrent,proto3" json:"torrent,omitempty"`
}

func (x *CreateTorrentV1Request) Reset() {
	*x = CreateTorrentV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_v1_torrent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTorrentV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTorrentV1Request) ProtoMessage() {}

func (x *CreateTorrentV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_v1_torrent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTorrentV1Request.ProtoReflect.Descriptor instead.
func (*CreateTorrentV1Request) Descriptor() ([]byte, []int) {
	return file_torrent_v1_torrent_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTorrentV1Request) GetCategory() *v1.Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *CreateTorrentV1Request) GetTorrent() *Torrent {
	if x != nil {
		return x.Torrent
	}
	return nil
}

type CreateTorrentV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTorrentV1Response) Reset() {
	*x = CreateTorrentV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_v1_torrent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTorrentV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTorrentV1Response) ProtoMessage() {}

func (x *CreateTorrentV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_v1_torrent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTorrentV1Response.ProtoReflect.Descriptor instead.
func (*CreateTorrentV1Response) Descriptor() ([]byte, []int) {
	return file_torrent_v1_torrent_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTorrentV1Response) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_torrent_v1_torrent_proto protoreflect.FileDescriptor

var file_torrent_v1_torrent_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1d, 0x0a, 0x07, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x2d, 0x0a, 0x07, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0x7a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a,
	0x07, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x8c, 0x02, 0x0a, 0x0e, 0x54, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12, 0x1f, 0x2e, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x67, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f,
	0x76, 0x31, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12, 0x22, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x67, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x53, 0x68, 0x65, 0x65, 0x70,
	0x34, 0x30, 0x32, 0x2f, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_torrent_v1_torrent_proto_rawDescOnce sync.Once
	file_torrent_v1_torrent_proto_rawDescData = file_torrent_v1_torrent_proto_rawDesc
)

func file_torrent_v1_torrent_proto_rawDescGZIP() []byte {
	file_torrent_v1_torrent_proto_rawDescOnce.Do(func() {
		file_torrent_v1_torrent_proto_rawDescData = protoimpl.X.CompressGZIP(file_torrent_v1_torrent_proto_rawDescData)
	})
	return file_torrent_v1_torrent_proto_rawDescData
}

var file_torrent_v1_torrent_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_torrent_v1_torrent_proto_goTypes = []any{
	(*Torrent)(nil),                 // 0: torrent.v1.Torrent
	(*GetTorrentV1Request)(nil),     // 1: torrent.v1.GetTorrentV1Request
	(*GetTorrentV1Response)(nil),    // 2: torrent.v1.GetTorrentV1Response
	(*CreateTorrentV1Request)(nil),  // 3: torrent.v1.CreateTorrentV1Request
	(*CreateTorrentV1Response)(nil), // 4: torrent.v1.CreateTorrentV1Response
	(*v1.Category)(nil),             // 5: category.v1.Category
}
var file_torrent_v1_torrent_proto_depIdxs = []int32{
	5, // 0: torrent.v1.GetTorrentV1Response.category:type_name -> category.v1.Category
	0, // 1: torrent.v1.GetTorrentV1Response.torrent:type_name -> torrent.v1.Torrent
	5, // 2: torrent.v1.CreateTorrentV1Request.category:type_name -> category.v1.Category
	0, // 3: torrent.v1.CreateTorrentV1Request.torrent:type_name -> torrent.v1.Torrent
	1, // 4: torrent.v1.TorrentService.GetTorrentV1:input_type -> torrent.v1.GetTorrentV1Request
	3, // 5: torrent.v1.TorrentService.CreateTorrentV1:input_type -> torrent.v1.CreateTorrentV1Request
	2, // 6: torrent.v1.TorrentService.GetTorrentV1:output_type -> torrent.v1.GetTorrentV1Response
	4, // 7: torrent.v1.TorrentService.CreateTorrentV1:output_type -> torrent.v1.CreateTorrentV1Response
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_torrent_v1_torrent_proto_init() }
func file_torrent_v1_torrent_proto_init() {
	if File_torrent_v1_torrent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_torrent_v1_torrent_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Torrent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_torrent_v1_torrent_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetTorrentV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_torrent_v1_torrent_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetTorrentV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_torrent_v1_torrent_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTorrentV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_torrent_v1_torrent_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTorrentV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_torrent_v1_torrent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_torrent_v1_torrent_proto_goTypes,
		DependencyIndexes: file_torrent_v1_torrent_proto_depIdxs,
		MessageInfos:      file_torrent_v1_torrent_proto_msgTypes,
	}.Build()
	File_torrent_v1_torrent_proto = out.File
	file_torrent_v1_torrent_proto_rawDesc = nil
	file_torrent_v1_torrent_proto_goTypes = nil
	file_torrent_v1_torrent_proto_depIdxs = nil
}
