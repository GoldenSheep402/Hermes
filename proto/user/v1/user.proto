syntax = "proto3";
package user.v1;
option go_package = "github.com/GoldenSheep402/Hermes/pkg/proto/go/user/v1;userV1";

import "google/api/annotations.proto";

message User {
  string id = 1;
  string nickname = 2;
  string role = 3;
}

service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/gapi/user/v1/info"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/gapi/user/v1/info"
      body: "*"
    };
  }

  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {
    option (google.api.http) = {
      put: "/gapi/user/v1/password"
      body: "*"
    };
  }

  // GROUP
  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse) {
    option (google.api.http) = {
      post: "/gapi/group/v1/create"
      body: "*"
    };
  }

  rpc GetGroup(GetGroupRequest) returns (GetGroupResponse) {
    option (google.api.http) = {
      post: "/gapi/group/v1/get"
      body: "*"
    };
  }


  rpc UpdateGroup(UpdateGroupRequest) returns (UpdateGroupResponse) {
    option (google.api.http) = {
      post: "/gapi/group/v1/update"
      body: "*"
    };
  }

  rpc GroupAddUser(GroupAddUserRequest) returns (GroupAddUserResponse){
    option (google.api.http) = {
      post: "/gapi/group/v1/user/add"
      body: "*",
    };
  }

  rpc GroupRemoveUser(GroupRemoveUserRequest) returns (GroupRemoveUserResponse){
    option (google.api.http) = {
      post: "/gapi/group/v1/user/remove"
      body: "*",
    };
  }

  rpc GroupUserUpdate(GroupUserUpdateRequest) returns (GroupUserUpdateResponse){
    option(google.api.http) = {
      post: "/gapi/group/v1/user/update"
      body: "*",
    };
  }
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  User user = 1;
}

message UpdateUserResponse {
  User user = 1;
}

message UpdatePasswordRequest {
  string oldPassword = 1;
  string newPassword = 2;
}

message UpdatePasswordResponse {}

// GROUP
message Group {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated GroupMetaData metaData = 4;
}

message GroupMetaData {
  string key = 1;
  int32  order = 2;
  string description = 3;
  string type = 4;
  string value = 5;
  string defaultValue = 6;
}

message CreateGroupRequest {
  Group group = 1;
}
message CreateGroupResponse {}

message GetGroupRequest {
  string id = 1;
}

message GetGroupResponse {
  Group group = 1;
}

message UpdateGroupRequest {
  Group group = 1;
}
message UpdateGroupResponse {}

message GroupAddUserRequest {
  string userId = 1;
  string groupId = 2;
  repeated GroupMetaData metaData = 3;
}

message GroupAddUserResponse {}

message  GroupRemoveUserRequest {
  string userId = 1;
  string groupId = 2;
}
message GroupRemoveUserResponse {}

message GroupUserUpdateRequest {
  string userId = 1;
  string groupId = 2;
  repeated GroupMetaData metaData = 3;
}
message GroupUserUpdateResponse {}